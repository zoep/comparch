#Invoke as follows: simics -stall -x runbenchmark.simics
#Load checkpoint
read-configuration /home/zoo/simics-workspace/checkpoints/boot.check 

enable-magic-breakpoint
instruction-fetch-mode instruction-fetch-trace
istc-disable
dstc-disable

#Uncomment n' Run the wanted benchmark

#con0.input "./gzip input.combined 32 \n"

#con0.input "./mcf ./inp.in.mcf.train \n"

con0.input "./art -scanfile c756hel.in -trainfile1 a10.img -trainfile2 hc.img -stride 2 -startx 110 -starty 200 -endx 160 -endy 240 -objects 10 \n"

#con0.input "./equake < inp.in.equake.train \n"\

c

#First breakpoint encountered
#NOTE: you may take checkpoint here for each different application, in order
#to omit the execution of its initialization phase in subsequent simulations (see #Parartima C). E.g.:

write-configuration /home/zoo/simics-workspace/checkpoints/art-break1.check

#Load cache hierarcy parameters

echo "Loading caches"
run-command-file /home/zoo/simics-workspace/cache-hierarchy.simics

#Continue simulation for 100,000,000 instructions to warm-up caches
echo "Warming up caches"
c 100_000_000

#Reset statistics
dc.reset-statistics
ic.reset-statistics
l2c.reset-statistics
ptime
#Continue simulation for 1,000,000,000 instructions
echo "Simulating..."
c 1000_000_000
#Collect statistics

dc.statistics
ic.statistics
l2c.statistics
ptime
exit